<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" xmlns:ei="clr-namespace:Microsoft.Expression.Interactivity.Core;assembly=Microsoft.Expression.Interactions" xmlns:Custom="http://www.galasoft.ch/mvvmlight">
    <!-- Resource dictionary entries should be defined here. -->
    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="White"/>
    </Style>
    <Style TargetType="{x:Type Slider}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF0056FF" Offset="0"/>
                    <GradientStop Color="White" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="#FFFFFBFB"/>
        <Setter Property="BorderBrush" Value="DarkBlue"/>
        <Setter Property="BorderThickness" Value="2"/>
    </Style>
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="BorderBrush" Value="DarkBlue"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="Blue"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Button}">
        <Setter Property="BorderBrush" Value="DarkBlue"/>
        <Setter Property="Background" Value="Blue"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Padding" Value="5,0,5,1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Cursor="Hand" x:Name="ContentContainer" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="3" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                		<VisualStateManager.VisualStateGroups>
                			<VisualStateGroup x:Name="CommonStates">
                				<VisualState x:Name="Normal"/>
                				<VisualState x:Name="MouseOver"/>
                				<VisualState x:Name="Pressed"/>
                				<VisualState x:Name="Disabled">
                					<Storyboard>
                						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="contentPresenter">
                							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                						</ObjectAnimationUsingKeyFrames>
                						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                							<EasingDoubleKeyFrame KeyTime="0" Value="0.495"/>
                						</DoubleAnimationUsingKeyFrames>
                						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ContentContainer">
                							<EasingDoubleKeyFrame KeyTime="0" Value="0.495"/>
                						</DoubleAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                			</VisualStateGroup>
                		</VisualStateManager.VisualStateGroups>
                		<ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RenderTransformOrigin="0.5,0.5" OpacityMask="Black">
                			<ContentPresenter.ContentTemplate>
                				<DataTemplate>
                					<TextBlock Foreground="White" Text="{TemplateBinding Content}" FontSize="24" FontWeight="Bold"/>
                				</DataTemplate>
                			</ContentPresenter.ContentTemplate>
                		</ContentPresenter>
                	</Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="QuestionButton" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="48" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}" Foreground="{TemplateBinding OpacityMask}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="BlinkStoryboard" RepeatBehavior="0:0:2" AutoReverse="True">
                            <ColorAnimation From="Transparent" To="Yellow" Duration="0:0:0.5" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border"/>
                            <ColorAnimation From="White" To="Blue" Duration="0:0:0.2" Storyboard.TargetProperty="(UIElement.OpacityMask).(SolidColorBrush.Color)" Storyboard.TargetName="contentPresenter" />
                            <ColorAnimation From="Black" To="White" Duration="0:0:0.2" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Color)" Storyboard.TargetName="contentPresenter" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="grid">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="IsAnsweredGroup">
                                <VisualState x:Name="Answered">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="grid">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="contentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="NotAnswered"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <i:Interaction.Triggers>
                            <ei:DataTrigger Value="False" Binding="{Binding IsAnswered}">
                                <ei:GoToStateAction StateName="NotAnswered"/>
                            </ei:DataTrigger>
                            <ei:DataTrigger Value="True" Binding="{Binding IsAnswered}">
                                <ei:GoToStateAction StateName="Answered"/>
                            </ei:DataTrigger>
                        </i:Interaction.Triggers>
                        <Border x:Name="border" Width="Auto" Height="Auto" Cursor="Hand" BorderBrush="White" BorderThickness="1,1,0,1" Background="Transparent" >
                            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center" OpacityMask="White" >
                        		<ContentPresenter.Effect>
                        			<DropShadowEffect Color="#FF1720A1"/>
                        		</ContentPresenter.Effect>
                        	</ContentPresenter>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="UIElement.MouseLeftButtonDown" SourceName="border">
                            <BeginStoryboard Storyboard="{StaticResource BlinkStoryboard}"/>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>